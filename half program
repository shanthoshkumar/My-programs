pragma solidity ^0.4.0.;
contract Nutrition 
{
    struct Health
    {
        uint256 Customerid;
        uint256 Customersitemid;
        uint256 CustomersTotal;
        string Customername;
    }
    
    uint256 Itemid;
    string  []Itemname;
    uint256 []priceper;
    uint256 []TotalQuantity;
    uint256 []Item_Array;
    uint256 Total;
    mapping(uint=>Health)key_1;
    function Production(uint256 _itemid,string _itemname,uint256 _itemprice,uint256 _total)public
    {
            Item_Array.push(_itemid);
            Itemname.push(_itemname);   
            priceper.push(_itemprice);
            TotalQuantity.push(_total);
            Total=TotalQuantity.push(_total);
    }
    function  Food_Serve(uint256 _cid,uint256 _itemid,uint256 _total)public returns(uint256,uint256,string,uint256)
    {   
            key_1[_cid].Customerid=_cid;
            key_1[_cid].Customersitemid=_itemid;
            key_1[_cid].CustomersTotal=_total;
            Total--;
            Itemid++;
        return (key_1[_cid].Customerid,key_1[_cid].Customersitemid,Itemname[Itemid],key_1[_cid].CustomersTotal*priceper[Itemid]);
    }
  //  function  Boarding()
}
